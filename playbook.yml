---
- name: MariaDB
  hosts: web_nodes

  tasks:
    - name: Check /home freespace morethen 10% avaible 
      shell: df  /vagrant | egrep -o '[0-9]+%' | cut -d'%' -f1
      register: tmp_freespace
        
    - fail:
        msg: /VAGRANT does not have the minimum space 10% required to continue CURRENT USAGE % {{ tmp_freespace.stdout }} 
      when: tmp_freespace.stdout <= "57"
      
      

---
- name: MariaDB
  hosts: dbnode1
  become: yes
  

  tasks:

    
    - name: data stage 1.1| checking job status
      shell: grep -i "Nominal extract finished" /opt/nominal-data-load/plxExtract_$(date +%Y-%m-%d).log | awk '{$1=""; print $0}'
      register: job_status

    - fail:
        msg: 'Data stage 1.1| checking job status Failed ' # not required. The customized message used for failing execution. If omitted, fail will simply bail out with a generic message.
      when: job_status.stdout != ' - Nominal extract finished'

    # file count
    - name: test file count
      shell: find /opt/nominal-data-load/ -type f | wc -l 
      register: test_status
    - debug:
        msg: value is here "{{ test_status.stdout }}" # not required. The customized message that is printed. If omitted, prints a generic message.
        
       

  #chekcing cron tab  comment out working > crontab -l | sed '/demo.sh/s/^/#/' | crontab -
    #uncomment crontab -l | sed -e 's=^#\(.*/opt/demo.sh$\)=\1=' | crontab -    
    #///commeny crontab -l |sed -e 's=\(^.*/opt/watchdog/startwatchdog.sh$\)=#\1=' | crontab -
    - name: comment line
      shell: crontab -l | sed '/demo.sh/s/^/#/' | crontab -
      
    - name: check current status
      shell: crontab -l


    - name: uncomment line 
      shell: crontab -l | sed -e 's=^#\(.*/opt/demo.sh$\)=\1=' | crontab -




